Given a sorted array arr[] of size n without duplicates, and given a value x. Floor of x is defined as the largest element k in arr[] such that k is smaller than or equal to x. Find the index of k(0-based indexing).

Examples

Input: n = 7, x = 0 arr[] = {1,2,8,10,11,12,19}
Output: -1
Explanation: No element less than 0 is found. So output is "-1".

//SOLUTION

class Solution {

    // Function to find floor of x
    // arr: input array
    // n is the size of array
    static int findFloor(long arr[], int n, long x) {
        int l=0;
        int h=n-1;
        int ans=-1;
        while(l<=h){
            int mid=l+(h-l)/2; //important
            if(arr[mid]==x){
                ans=mid;
                break;
                
            }
            else if(arr[mid]>x){
                h=mid-1;
            }
            else if(arr[mid]<x){
                ans=mid;
                l=mid+1;
                
            }
        }
        return ans;
    }
}
